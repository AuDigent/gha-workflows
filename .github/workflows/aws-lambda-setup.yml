name: AWS ECS Fargate Service Setup

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment of the fargate service'
        required: true
        type: string
      owner:
        description: 'Owner of the fargate service'
        required: true
        type: string
      service:
        description: 'Name of the fargate service'
        required: true
        type: string
      aws_region:
        description: 'AWS region'
        default: 'us-west-2'
        required: false
        type: string
    outputs: 
      repository_name: 
        description: 'ECR repository name the task definition points to'
        value: ${{ jobs.variables.outputs.repository_name }}
      repository_url: 
        description: 'ECR repository name the task definition points to'
        value: ${{ jobs.variables.outputs.repository_url }}
      lambda_function: 
        description: 'Name of the lambda function'
        value: ${{ jobs.variables.outputs.lambda_function }}

jobs:
  variables:
    name: Get AWS Lambda Function Stored Values
    runs-on: ubuntu-20.04
    outputs:
      lambda_function: ${{ steps.aws-variables.outputs.lambda_function }}
      repository_name: ${{ steps.aws-variables.outputs.repository_name }}
      repository_url: ${{ steps.aws-variables.outputs.repository_url }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws_region }}
          mask-aws-account-id: false

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get and Output Lambda Variables
        id: aws-variables
        env:
          prefix: /${{ inputs.environment }}/${{ inputs.owner }}/${{ inputs.service }}
          registry: ${{ steps.login-ecr.outputs.registry }}
        run: |
          echo "lambda_function=$(aws ssm get-parameter --name "$prefix/lambda_function" --query Parameter.Value --output text)" >> $GITHUB_OUTPUT
          repository_name=$(aws ssm get-parameter --name "$prefix/repository_name" --query Parameter.Value --output text)
          echo "repository_name=$repository_name" >> $GITHUB_OUTPUT
          echo "repository_url=$registry/$repository_name" >> $GITHUB_OUTPUT
